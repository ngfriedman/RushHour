  public void update(long elapsedTime) {
	PIECES.update(elapsedTime);
	    
	if (keyDown(KeyEvent.VK_0)){
	    Selected = piece0;
	}
	else if (keyDown(KeyEvent.VK_1)){
	    Selected = piece1;
	}
	else if (keyDown(KeyEvent.VK_2)){
	    Selected = piece2;
	}
	else if(keyDown(KeyEvent.VK_3)){
	    Selected = piece3;
	}
	else if(keyDown(KeyEvent.VK_4)){
	    Selected = piece4;
	}
	else if(keyDown(KeyEvent.VK_5)){
	    Selected = piece5;
	}
	else if (keyDown(KeyEvent.VK_6)){
	    Selected = piece6;
	}
	else if (keyDown(KeyEvent.VK_7)){
	    Selected = piece7;
	}
	else if(keyDown(KeyEvent.VK_8)){
	    Selected = piece8;
	}
	else if(keyDown(KeyEvent.VK_9)){
	    Selected = piece9;
	}
	else if(Selected == null){
	    Selected = piece0;
	}
	if (Selected.getImage().getWidth() < Selected.getImage().getHeight()){
	    if (keyDown(KeyEvent.VK_DOWN)) {
		if (overlap(KeyEvent.VK_DOWN) && inBoundaries(KeyEvent.VK_DOWN)) {
		    Selected.move(0, piece1.movementSpeed*elapsedTime);
		    } 
		    
	    }
		if (keyDown(KeyEvent.VK_UP)) {
	if (overlap(KeyEvent.VK_UP) && inBoundaries(KeyEvent.VK_UP)) {
		    Selected.move(0, -piece1.movementSpeed*elapsedTime);
		}
	    }
	}
	
	    if(Selected.getImage().getWidth() > Selected.getImage().getHeight()){
		if (keyDown(KeyEvent.VK_RIGHT)) {
		    if (overlap(KeyEvent.VK_RIGHT) && inBoundaries(KeyEvent.VK_RIGHT)) {
		    Selected.move(piece1.movementSpeed*elapsedTime, 0);
		}
		}
		if (keyDown(KeyEvent.VK_LEFT)) {
		    if (overlap(KeyEvent.VK_LEFT) && inBoundaries(KeyEvent.VK_LEFT)) {
		    Selected.move(-piece1.movementSpeed*elapsedTime, 0);
		}
		}
	    }
	    
    }

    public boolean overlap(int direction) {
	for (int i = 0; i < piecesList.size(); i++) {
	    if ( piecesList.get(i) != Selected) {
		try {
		    BufferedImage bimgI = piecesList.get(i).getImage();	
		    double widthI = bimgI.getWidth();
		    double heightI = bimgI.getHeight();

		    double xLocI = piecesList.get(i).getX();
		    double yLocI = piecesList.get(i).getY();

		    BufferedImage bimgS = Selected.getImage();
		    double widthS = bimgS.getWidth();
		    double heightS = bimgS.getHeight();

		    double xLocS = Selected.getX();
		    double yLocS = Selected.getY();

		    if((xLocI <= xLocS && xLocS <= (xLocI+widthI) && yLocI <= yLocS &&  yLocS <= (yLocI+heightI)  && direction == KeyEvent.VK_UP) || (xLocI<= (xLocS+widthS) && (xLocS+widthS) <= (xLocI+widthI) && yLocI <= yLocS && yLocS <= (yLocI+heightI)  && direction == KeyEvent.VK_UP)){
			return false;
	        
		    }
		    if((xLocI<= xLocS &&  xLocS <= (xLocI+widthI) && yLocI <= (yLocS+heightS) && (yLocS+heightS) <= (yLocI+heightI)  && direction == KeyEvent.VK_DOWN) || (xLocI<= (xLocS+widthS) && (xLocS+widthS) <= (xLocI+widthI) && yLocI <= (yLocS+heightS) &&  (yLocS+heightS) <= (yLocI+heightI) && direction == KeyEvent.VK_DOWN)){
			return false;
 
		    }
		    if((xLocI<= (xLocS+widthS) &&  (xLocS+widthS) <= (xLocI+widthI) && yLocI <= yLocS && yLocS <= (yLocI+heightI)  && direction == KeyEvent.VK_RIGHT) || (xLocI<= (xLocS+widthS) && (xLocS+widthS) <= (xLocI+widthI) && yLocI <= (yLocS+heightS) &&  (yLocS+heightS) <= (yLocI+heightI)  && direction == KeyEvent.VK_RIGHT)){
			return false;
       
		    }
		    if((xLocI<= xLocS && xLocS <= (xLocI+widthI) && yLocI <= yLocS &&  yLocS <= (yLocI+heightI) && direction == KeyEvent.VK_LEFT) || (xLocI<= xLocS &&  xLocS <= (xLocI+widthI) && yLocI <= (yLocS+heightS) && (yLocS+heightS) <= (yLocI+heightI) && direction == KeyEvent.VK_LEFT)){
			return false;
      
		    }
		}
		catch( Exception e) {
		}
	    }
	}
	return true;
    }
 public boolean inBoundaries(int direction) {
	if (Selected.getY()+ Selected.getHeight() >= 650 && direction == KeyEvent.VK_DOWN) {
	    return false;
	    
	}
	if (Selected.getY() <= 0 && direction == KeyEvent.VK_UP) {
	    return false;
	}
	if (Selected == piecesList.get(0) && Selected.getX() > 650 && Selected.getX() < 655) {
	    System.out.println("YOU MADE IT OUT OF LLAMAPOLOOZA! THE RAISINS ARE ON IN 20, COME BACK SOON!");
	    System.exit(0);
	}
	if (Selected != piecesList.get(0) && Selected.getX() + Selected.getWidth() >= 650 && direction == KeyEvent.VK_RIGHT) {
	    return false;
	}
	if (Selected.getX() <= 0 && direction == KeyEvent.VK_LEFT) {
	    return false;
	}
	return true;
    }
